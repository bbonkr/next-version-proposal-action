name: "Verify PR"

on:
  pull_request:

env:
  NODE_VERSION: 20.x

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Set Node.js ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: Install dependencies
        run: |
          npm install

      - name: Run test
        run: |
          npm run test --if-present
        env:
          NODE_ENV: "test"
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          OWNER: ${{ secrets.TEST_OWNER }}
          REPO: ${{ secrets.TEST_REPO }}

      - name: Run npm all script
        run: |
          npm run all
        # env:
        #   NODE_ENV: 'production'

      - name: Logging github.ref
        run: |
          echo "github.ref=${{ github.ref }}"  
          echo "github.event.pull_request.number=${{ github.event.pull_request.number }}"
          echo "github.event.pull_request.base.ref=${{ github.event.pull_request.base.ref }}"
          echo "github.event.pull_request.head.ref=${{ github.event.pull_request.head.ref }}"

      - name: Get next version
        uses: ./
        id: next_version_proposal
        with:
          next_version_prefix: "v"
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}

      - name: log
        run: |
          echo "latest_version=${{ steps.next_version_proposal.outputs.latest_version }}"
          echo "next_version=${{ steps.next_version_proposal.outputs.next_version }}"
          echo "next_version_major=${{ steps.next_version_proposal.outputs.next_version_major }}"
          echo "next_version_minor=${{ steps.next_version_proposal.outputs.next_version_minor }}"
          echo "next_version_patch=${{ steps.next_version_proposal.outputs.next_version_patch }}"
